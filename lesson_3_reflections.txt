When would you want to use a remote repository rather than keeping all your work local?

I believe it's better to use it here when you want or need to share this archive with
other people, and later on download it to the local work.

Why might you want to always pull changes manually rather than having 
Git automatically stay up-to-date with your remote repository?

Maybe I would do this because we only want to commit after the changes we made
are significant, just like the automatic commit on Git.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks and clones are very similar because both make copies of the files and 
all history of commits, but forks should only be used in GitHub and clones can be
used in Git, to clone from Git or GitHub. Branches is different because it's a new path after some
commit, so it's not so similar to forks and clones.

What is the benefit of having a copy of the last known state of the remote stored locally?

I believe the main benefit is when comparing both commit using git diff and, if you use git fetch,
you can compare the origin/master and master in offline mode.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

I would collaborate just sending the code without any version control. It would be easier but way less
risky, because all versions of code would be lost. The only hard thing is to understand well how Git
and GitHub works.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

I would do this when we want to make tests about or to other people suggest some changes in code.
The benefits of using a separate branch is the workflow of suggestions in code changing, so 
the master branch don't get over overflowed. The only benefit, in my opinion of making changes
directly in master is it's simpler than using other branches.
